#Code to replicate Figure S3 results
#updated Saturday, August 24th, 2024

#setup----

library(ggplot2)
library(dplyr)
library(readxl)
library(tibble)
library(vegan)
library(phyloseq)
library(reshape2)
library(ggpubr)
library(tidyr)
library(ggbeeswarm)
library(ape)
library(ggExtra)

set.seed(42)

#set working directory
setwd('/Users/annadeveaux/Box Sync/2024_AnnaDrew_BioSigsOmics/')

#participant metadata
p.meta <- read_excel('ExtendedData/240822_BioSigs_extended_data_file1.xlsx',
                     sheet = 'Participant metadata') %>% 
  as.data.frame()
row.names(p.meta) <- p.meta$Sample
samples <- row.names(p.meta)

#metagenome metadata
m.meta <- read_excel('ExtendedData/240822_BioSigs_extended_data_file1.xlsx',
                     sheet = 'Metagenome metadata') %>% 
  as.data.frame()
row.names(m.meta) <- m.meta$Sample

##load phyloseq object----

#format raw MetaPhlAn4 output for phyloseq
#load data frame
m4.raw <- read_excel('ExtendedData/240822_BioSigs_extended_data_file3.xlsx', sheet = 'MetaPhlAn4',
                     skip = 1) %>% as.data.frame()
row.names(m4.raw) <- m4.raw$clade_name
m4.raw$clade_name <- NULL

#filter out rows containing strain-level annotations that are new to metaphlan4
m4.raw <- m4.raw %>% filter(!grepl('t__',rownames(.)))

#take only rows that include s__ (species level annotation)
m4.sp <- m4.raw[grepl('s__', rownames(m4.raw)), ]

#create phyloseq taxa table
spp <- data.frame(Names = rownames(m4.sp))
spp <- data.frame(do.call('rbind', strsplit(as.character(spp$Names),'|',fixed=TRUE)))
rownames(spp) <- rownames(m4.sp)
colnames(spp) <- c('Domain', 'Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')

#remove prefixes from taxa
spp$Domain <- gsub('k__', '', spp$Domain)
spp$Phylum <- gsub('p__', '', spp$Phylum)
spp$Class <- gsub('c__', '', spp$Class)
spp$Order <- gsub('o__', '', spp$Order)
spp$Family <- gsub('f__', '', spp$Family)
spp$Genus <- gsub('g__', '', spp$Genus)
spp$Species <- gsub('s__', '', spp$Species)

#convert to matrix
spp <- as.matrix(spp)

#make phyloseq object
ps <- phyloseq(otu_table(m4.sp, taxa_are_rows = TRUE),
               sample_data(p.meta),
               tax_table(spp))

##create wide species data frame
ps.spp <- tax_glom(ps, taxrank = 'Species')
ps.spp.df <- psmelt(ps.spp)
ps.spp.df.wide <- dcast(ps.spp.df, Sample ~ Species, value.var = "Abundance")
row.names(ps.spp.df.wide) <- ps.spp.df.wide$Sample
ps.spp.df.wide$Sample <- NULL

#diversity analysis----

##alpha diversity----

##convert relative abundance measurements to integers, preserving precision to 0.00001%
##ignore warning pertaining to singletons (relevant for amplicon sequencing)
ps.int <- transform_sample_counts(ps, function(x) trunc(x*100000))
adiv <- estimate_richness(ps.int, measures=c('Observed', 'Shannon'))

##append alpha diversity metrics to phyloseq object
sample_data(ps)$Richness <- adiv$Observed
sample_data(ps)$Shannon <- adiv$Shannon

##gather metadata to long format
ps.df <- data.frame(sample_data(ps))
ps.df.a <- gather(ps.df, Alpha_Measure, Value, Richness:Shannon, factor_key = TRUE)
ps.df.a$Group <- factor(ps.df.a$Group,
                        levels=c("Case", "Control"))

##test age vs. alpha diversity measures for E coli SBI cases (matches noted) vs controls

##set models
m.shannon.dol <- lm(Value ~ DOL*Group,
                    data = filter(ps.df.a, Alpha_Measure == 'Shannon' &
                                    (E_coli_SBI == 'Y' | Group == 'Control')))

m.richness.dol <- lm(Value ~ DOL*Group,
                     data = filter(ps.df.a, Alpha_Measure == 'Richness' &
                                     (E_coli_SBI == 'Y' | Group == 'Control')))

##extract slopes and p-values
summary(m.shannon.dol)

summary(m.richness.dol)

##plot

##shannon diversity
p.lm.shannon <- filter(ps.df.a, Alpha_Measure == 'Shannon' &
                         (E_coli_SBI == 'Y' | Group == 'Control')) %>%  
  ggplot(aes(x = DOL, y = Value)) +
  geom_point(alpha = 0.7, aes(color = (Colonized_final == 'yes'),
                              fill = Group, size = (Colonized_final == 'yes')), shape = 21) +
  stat_smooth(method = 'lm', formula = y ~ x, aes(color = Group)) +
  theme_classic() +
  scale_fill_manual(values = c('#E23B0E', '#196689')) +
  scale_color_manual(values = c('#E23B0E', '#196689', 'NA', 'black')) +
  scale_size_manual(values = c(2, 3)) +
  theme(legend.position = 'right',
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size=12),
        axis.text.x = element_text(size=12, angle=45, hjust=1),
        strip.text.x = element_text(size=15),
        aspect.ratio = 0.6) +
  labs(x = 'Day of life', y = 'Shannon diversity') +
  scale_y_continuous(trans = scales::pseudo_log_trans(base = 10),
                     breaks = c(0, 10, 100, 1000, 10000, 100000))

##richness
p.lm.richness <- filter(ps.df.a, Alpha_Measure == 'Richness' &
                          (E_coli_SBI == 'Y' | Group == 'Control')) %>%
  ggplot(aes(x = DOL, y = Value)) +
  geom_point(alpha = 0.7, aes(color = (Colonized_final == 'yes'),
                              fill = Group, size = (Colonized_final == 'yes')), shape = 21) +
  stat_smooth(method = 'lm', formula = y ~ x, aes(color = Group)) +
  theme_classic() +
  scale_fill_manual(values = c('#E23B0E', '#196689')) +
  scale_color_manual(values = c('#E23B0E', '#196689', 'NA', 'black')) +
  scale_size_manual(values = c(2, 3)) +
  theme(legend.position = 'right',
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size=12),
        axis.text.x = element_text(size=12, angle=45, hjust=1),
        strip.text.x = element_text(size=15),
        aspect.ratio = 0.6) +
  labs(x = 'Day of life', y = 'Species richness') +
  scale_y_continuous(trans = scales::pseudo_log_trans(base = 10),
                     breaks = c(0, 10, 100, 1000, 10000, 100000))

#respiration mode----

resp.mode <- read_excel('ExtendedData/240822_BioSigs_extended_data_file4.xlsx',
                      sheet = 'respiration mode') %>% as.data.frame()

##prep data frame for plotting
ps.spp.df.resp <- left_join(ps.spp.df,
                            select(resp.mode, c('Species', 'respiration_mode'))) %>% 
  filter(Abundance >= 1) %>% 
  filter(is.na(respiration_mode) != TRUE) %>%
  mutate(resp_2 = if_else(respiration_mode == 'anaerobe', 'anaerobe', 'aerobe')) %>% 
  group_by(Sample, resp_2, E_coli_SBI, Colonized_final, Group, Participant_ID, DOL) %>% 
  dplyr::summarise(sum_relab = sum(Abundance)) %>% 
  mutate(count = 1)

##set models
m.aerobe.dol <- lm(sum_relab ~ DOL*Group, data = (ps.spp.df.resp %>%
                                                    filter(resp_2 == "aerobe") %>%
                                                    filter(E_coli_SBI == "Y" | Group == "Control")))

m.anaerobe.dol <- lm(sum_relab ~ DOL*Group, data = (ps.spp.df.resp %>%
                                                      filter(resp_2 == "anaerobe") %>%
                                                      filter(E_coli_SBI == "Y" | Group == "Control")))

##extract slopes and p-values
summary(m.aerobe.dol)

summary(m.anaerobe.dol)

##check whether the correlations are normally distributed - nope
shapiro.test(ps.spp.df.resp$DOL)
shapiro.test(filter(ps.spp.df.resp, resp_2 == 'aerobe')$sum_relab)
shapiro.test(filter(ps.spp.df.resp, resp_2 == 'anaerobe')$sum_relab)

##plot
p.resp.relab <- ps.spp.df.resp %>%
  filter(E_coli_SBI == 'Y' | Group == 'Control') %>% 
  ggscatter(x = 'DOL', y = 'sum_relab',
            add = 'reg.line',
            point = F) +
  facet_wrap(~resp_2) +
  stat_cor(method = 'spearman') +
  geom_point(alpha = 0.7, aes(color = (Colonized_final == 'yes'),
                              fill = Group, size = (Colonized_final == 'yes')), shape = 21) +
  theme(aspect.ratio = 1.2) +
  scale_fill_manual(values = c('#E23B0E', '#196689')) +
  scale_color_manual(values = c('NA', 'black')) +
  scale_size_manual(values = c(2, 3))
